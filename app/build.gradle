plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.thesis.distanceguard"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    ext {
        lifecycle_version = "2.2.0"
        core_version = "1.2.0"
        room_version = "2.3.0"

    }
    //Standard Libraries
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.1.0-alpha08'
    //Test Libraries
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Dagger 2
    implementation 'com.google.dagger:dagger:2.27'
    implementation 'com.google.dagger:dagger-android:2.27'
    implementation 'com.google.dagger:dagger-android-support:2.27'
    // if you use the support libraries
    kapt 'com.google.dagger:dagger-compiler:2.27'
    kapt 'com.google.dagger:dagger-android-processor:2.27'
    //Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.github.ajalt:timberkt:1.5.1'


    //Live data
    implementation 'android.arch.lifecycle:extensions:1.1.1'
    //Chart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    //Circle imageview
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
    //google maps
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    //Camera detect
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.3'
    implementation 'com.google.firebase:firebase-ml-vision-object-detection-model:19.0.5'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.1.1'
    //Barcode Libs
    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.google.zxing:android-core:3.3.0'
    //gson
    implementation 'com.google.code.gson:gson:2.8.6'
    //okhttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.1"))
    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")
    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.0'

    // Charts
    implementation 'com.diogobernardino:williamchart:3.10.1'
    //Dialog and ripple
    implementation 'com.github.f0ris.sweetalert:library:1.6.2'
    implementation 'com.skyfishjy.ripplebackground:library:1.0.1'

    // Tooltips
    implementation 'com.diogobernardino.williamchart:tooltip-slider:3.10.1'
    implementation 'com.diogobernardino.williamchart:tooltip-points:3.10.1'
    //Circle indicator
    implementation 'me.relex:circleindicator:2.1.6'
    // Room components
    implementation "androidx.room:room-ktx:$room_version"
    // To use Kotlin annotation processing tool (kapt)
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "androidx.core:core-ktx:$core_version"
}